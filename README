To generate the dataset (in binary format) you use gendb.class . It
takes the parameters described in Agrawal et al's seminal paper, as
far as I can tell. This class will generate a .db file whose name will
reflect the parameters you specified.
To convert it to an ascii format you use db2asc.class . The format of
the file is described at the beginning of the source. See also
sample.asc . Note how this is _not_ a standard "list of transactions"
dataset as we would like, so another pass is needed to take out the
part before the BEGIN_DATA line to get only the transactions. I
personally call this latter format the ".dat" file format and denote
the one with the preamble as the ".asc" file format.

To convert from .dat to .asc one has to add the preamble to the file.
This is easy to compute: you just find the maximum item in the dataset
(let's call it max_item) and generate a number of lines like
1 1
2 2
... ...
i i
...
max_item max_item
and add htese at the top of the .dat file. Just remember to also add
BEGIN_DATA and END_DATA at the end.

To convert from .asc to .db you use asc2db.class . It's kind of
self-explanatory.

To mine the dataset you use minedb.class . Check the parameters. We
want to use the FP-growth algorithm (it is like a gigazillion number
of times faster than Apriori). Also note that specifing an algorithm
for association rules mining doesn't really give anything, because I
disabled it in the code (line 207-225 in minedb.java).